{
    "exportFormatVersion": 1.3,
    "exportTime": "2015-02-05 00:07:24",
    "containerVersion": {
        "accountId": "30449707",
        "containerId": "1002234",
        "containerVersionId": "0",
        "deleted": false,
        "container": {
            "accountId": "30449707",
            "containerId": "1002234",
            "name": "All Video Tracking",
            "publicId": "GTM-5PC7BK",
            "timeZoneCountryId": "US",
            "timeZoneId": "America/Los_Angeles",
            "notes": "",
            "usageContext": [
                "WEB"
            ],
            "fingerprint": "1423094824653",
            "enabledBuiltInVariable": [
                "EVENT",
                "OLD_HISTORY_STATE",
                "OLD_HISTORY_FRAGMENT",
                "NEW_HISTORY_STATE",
                "FORM_CLASSES",
                "CLICK_CLASSES",
                "CLICK_ID",
                "FORM_URL",
                "FORM_ELEMENT",
                "NEW_HISTORY_FRAGMENT",
                "CLICK_ELEMENT",
                "CLICK_TARGET",
                "FORM_TEXT",
                "CLICK_URL",
                "PAGE_URL",
                "PAGE_HOSTNAME",
                "REFERRER",
                "CLICK_TEXT",
                "FORM_TARGET",
                "HISTORY_SOURCE",
                "FORM_ID",
                "PAGE_PATH"
            ]
        },
        "tag": [
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "tagId": "19",
                "name": "HTML5 Video Event",
                "type": "ua",
                "liveOnly": false,
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "useDebugVersion",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "true"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "{{Fake UA}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_EVENT"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "nonInteraction",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventLabel",
                        "value": "{{HTML5 Video Label}}"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "anonymizeIp",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventCategory",
                        "value": "{{HTML5 Video Category}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventAction",
                        "value": "{{HTML5 Video Action}}"
                    }
                ],
                "fingerprint": "0",
                "firingTriggerId": [
                    "17"
                ]
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "tagId": "20",
                "name": "HTML5 Video Script",
                "type": "html",
                "liveOnly": false,
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "true"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script>\n// Let's wrap everything inside a function so variables are not defined as globals  \n(function(){  \n    // This is gonna our percent buckets ( 25%-75% )\n    //Change the variable \"divisor\" to create different multiples to track smaller %'s like 10% etc.\n    var divisor = 25;  \n    // We're going to save our players status on this object.  \n    var videos_status = {};  \n    // This is the funcion that is gonna handle the event sent by the player listeners  \n    function eventHandler(e){   \n      switch(e.type) {  \n          // This event type is sent everytime the player updated it's current time,  \n          // We're using for the % of the video played.     \n        case 'timeupdate':      \n          // Let's set the save the current player's video time in our status object              \n          videos_status[e.target.id].current = Math.round(e.target.currentTime);     \n          // We just want to send the percent events once     \n          var pct = Math.floor(100 * videos_status[e.target.id].current / e.target.duration);            \n          for (var j in videos_status[e.target.id]._progress_markers) {\n            if (pct >= j && j > videos_status[e.target.id].greatest_marker) {\n    \t\t\tvideos_status[e.target.id].greatest_marker = j;\n            }\n          }\n         // current bucket hasn't been already sent to GA?, let's push it to GTM\n         if (videos_status[e.target.id].greatest_marker && !videos_status[e.target.id]._progress_markers[videos_status[e.target.id].greatest_marker]) {\n             videos_status[e.target.id]._progress_markers[videos_status[e.target.id].greatest_marker] = true;\n             dataLayer.push({\n                 'event': 'gaEvent',\n                 'gaEventCategory': 'HTML5 Video',\n                 'gaEventAction': 'Progress_' + videos_status[e.target.id].greatest_marker + '%', \n                 // We are using sanitizing the current video src string, and getting just the video name part\n                 'gaEventLabel': decodeURIComponent(e.target.currentSrc.split('/')[e.target.currentSrc.split('/').length - 1])\n             });\n        }\n\n    break;\n    // This event is fired when user's click on the play button\n    case 'play':\n        dataLayer.push({\n            'event': 'gaEvent',\n            'gaEventCategory': 'HTML5 Video',\n            'gaEventAction': 'Play',\n            'gaEventLabel': decodeURIComponent(e.target.currentSrc.split('/')[e.target.currentSrc.split('/').length - 1])\n        });\n\n        break;\n        // This event is fied when user's click on the pause button\n    case 'pause':\n        dataLayer.push({\n            'event': 'gaEvent',\n            'gaEventCategory': 'HTML5 Video',\n            'gaEventAction': 'Pause',\n            'gaEventLabel': decodeURIComponent(e.target.currentSrc.split('/')[e.target.currentSrc.split('/').length - 1]),\n            'gaEventValue': videos_status[e.target.id].current\n        });\n        break;\n        // If the user ends playing the video, an Finish video will be pushed ( This equals to % played = 100 )  \n    case 'ended':\n        dataLayer.push({\n            'event': 'gaEvent',\n            'gaEventCategory': 'HTML5 Video',\n            'gaEventAction': 'Finished',\n            'gaEventLabel': decodeURIComponent(e.target.currentSrc.split('/')[e.target.currentSrc.split('/').length - 1])\n        });\n        break;\n    default:\n        break;\n        }\n\n     }\n        // We need to configure the listeners\n        // Let's grab all the the \"video\" objects on the current page     \n        var videos = document.getElementsByTagName('video');\n        for (var i = 0; i < videos.length; i++) {\n            // In order to have some id to reference in our status object, we are adding an id to the video objects\n            // that don't have an id attribute. \n            var videoTagId;\n            if (!videos[i].getAttribute('id')) {\n                // Generate a random alphanumeric string to use is as the id\n                videoTagId = 'html5_video_' + Math.random().toString(36).slice(2);\n                videos[i].setAttribute('id', videoTagId);\n            }\n            // Current video has alredy a id attribute, then let's use it :)\n            else {\n                videoTagId = videos[i].getAttribute('id');\n            }\n\n            // Video Status Object declaration  \n            videos_status[videoTagId] = {};\n            // We'll save the highest percent mark played by the user in the current video.\n            videos_status[videoTagId].greatest_marker = 0;\n            // Let's set the progress markers, so we can know afterwards which ones have been already sent.\n            videos_status[videoTagId]._progress_markers = {};\n\n            for (j = 0; j < 100; j++) {\n                videos_status[videoTagId].progress_point = divisor * Math.floor(j / divisor);\n                videos_status[videoTagId]._progress_markers[videos_status[videoTagId].progress_point] = false;\n            } \n            // On page DOM, all players currentTime is 0     \n            videos_status[videoTagId].current = 0;      \n            // Now we're setting the event listeners.     \n            videos[i].addEventListener(\"play\", eventHandler, false);     \n            videos[i].addEventListener(\"pause\", eventHandler, false);     \n            videos[i].addEventListener(\"ended\", eventHandler, false);     \n            videos[i].addEventListener(\"timeupdate\", eventHandler, false);     \n            videos[i].addEventListener(\"ended\", eventHandler, false);\n         } \n})();\n</script>"
                    }
                ],
                "fingerprint": "0",
                "firingTriggerId": [
                    "18"
                ]
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "tagId": "22",
                "name": "Vimeo Event",
                "type": "ua",
                "liveOnly": false,
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "useDebugVersion",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "true"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "{{Fake UA}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_EVENT"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "nonInteraction",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventLabel",
                        "value": "{{Vimeo Label}}"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "anonymizeIp",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventCategory",
                        "value": "{{Vimeo Category}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventAction",
                        "value": "{{Vimeo Action}}"
                    }
                ],
                "fingerprint": "0",
                "firingTriggerId": [
                    "19"
                ]
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "tagId": "25",
                "name": "Vimeo Video Script",
                "type": "html",
                "liveOnly": false,
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "true"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "(function($) {\n  \"use strict\";\n\n  // Check for iframe\n  if (!$('#vimeo-player').length) {\n    // console.info('iframe not available');\n    return;\n  }\n\n  var f = $('#vimeo-player'),\n      url = f.attr('src').split('?')[0],      // Source URL\n      protocol = document.URL.split(':')[0],  // Domain protocol (http or https)\n      trackProgress = f.data('progress'),     // Data attribute to enable progress tracking\n      trackSeeking = f.data('seek'),          // Data attribute to enable seek tracking\n      gaTracker,\n      progress25 = false,\n      progress50 = false,\n      progress75 = false,\n      videoPlayed = false,\n      videoPaused = false,\n      videoResumed = false,\n      videoSeeking = false,\n      videoCompleted = false,\n      timePercentComplete = 0;\n\n  // Match protocol with what is in document.URL\n  if (url.match(/^http/) === null) {\n    url = protocol + ':' + url;\n  }\n\n  // Check which version of Google Analytics is used\n\n  // Universal Analytics (universal.js)\n  if (typeof ga === \"function\") {\n    gaTracker = 'ua';\n    // console.info('Universal Analytics');\n  }\n\n  // Classic Analytics (ga.js)\n  if (typeof _gaq !== \"undefined\" && typeof _gaq.push === \"function\") {\n    gaTracker = 'ga';\n    // console.info('Classic Analytics');\n  }\n\n  // Google Tag Manager (dataLayer)\n  if (typeof dataLayer !== \"undefined\" && typeof dataLayer.push === \"function\") {\n    gaTracker = 'gtm';\n    // console.info('Google Tag Manager');\n  }\n\n  // Listen for messages from the player\n  if (window.addEventListener) {\n    window.addEventListener('message', onMessageReceived, false);\n  } else {\n    window.attachEvent('onmessage', onMessageReceived, false);\n  }\n\n  // Send event to Classic Analytics, Universal Analytics or Google Tag Manager\n  function sendEvent(action) {\n    switch (gaTracker) {\n    case 'gtm':\n      dataLayer.push({\n        'event' : 'Vimeo',\n        'eventCategory' : 'Vimeo',\n        'eventAction' : action,\n        'eventLabel' : url,\n        'eventValue' : undefined,\n        'eventNonInteraction' : true\n      });\n      break;\n    case 'ua':\n      ga('send', 'event', 'Vimeo', action, url, undefined, {\n        \"nonInteraction\" : 1\n      });\n      break;\n    case 'ga':\n      _gaq.push(['_trackEvent', 'Vimeo', action, url, undefined, true]);\n      break;\n    }\n  }\n\n  // Handle messages received from the player\n  function onMessageReceived(e) {\n    if (e.origin.replace('https:', 'http:') !== \"http://player.vimeo.com\" || typeof gaTracker === 'undefined') {\n      // console.warn('Tracker is missing!');\n      return;\n    }\n    var data = JSON.parse(e.data);\n\n    switch (data.event) {\n    case 'ready':\n      onReady();\n      break;\n\n    case 'playProgress':\n      onPlayProgress(data.data);\n      break;\n\n    case 'seek':\n      if (trackSeeking && !videoSeeking) {\n        sendEvent('Skipped video forward or backward');\n        videoSeeking = true; // Avoid subsequent seek trackings\n      }\n      break;\n\n    case 'play':\n      if (!videoPlayed) {\n        sendEvent('Started video');\n        videoPlayed = true; // Avoid subsequent play trackings\n      } else if (!videoResumed && videoPaused) {\n        sendEvent('Resumed video');\n        videoResumed = true; // Avoid subsequent resume trackings\n      }\n      break;\n\n    case 'pause':\n      onPause();\n      break;\n\n    case 'finish':\n      if (!videoCompleted) {\n        sendEvent('Completed video');\n        videoCompleted = true; // Avoid subsequent finish trackings\n      }\n      break;\n    }\n  }\n\n  // Helper function for sending a message to the player\n  function post(action, value) {\n    var data = {\n      method: action\n    };\n\n    if (value) {\n      data.value = value;\n    }\n\n    f[0].contentWindow.postMessage(JSON.stringify(data), url);\n  }\n\n  function onReady() {\n    post('addEventListener', 'play');\n    post('addEventListener', 'seek');\n    post('addEventListener', 'pause');\n    post('addEventListener', 'finish');\n    post('addEventListener', 'playProgress');\n  }\n\n  function onPause() {\n    if (timePercentComplete < 99 && !videoPaused) {\n      sendEvent('Paused video');\n      videoPaused = true; // Avoid subsequent pause trackings\n    }\n  }\n\n  // Tracking video progress\n  function onPlayProgress(data) {\n    timePercentComplete = Math.round((data.percent) * 100); // Round to a whole number\n\n    if (!trackProgress) {\n      return;\n    }\n\n    var progress;\n\n    if (timePercentComplete > 24 && !progress25) {\n      progress = 'Played video: 25%';\n      progress25 = true;\n    }\n\n    if (timePercentComplete > 49 && !progress50) {\n      progress = 'Played video: 50%';\n      progress50 = true;\n    }\n\n    if (timePercentComplete > 74 && !progress75) {\n      progress = 'Played video: 75%';\n      progress75 = true;\n    }\n\n    if (progress) {\n      sendEvent(progress);\n    }\n  }\n\n})(jQuery);"
                    }
                ],
                "fingerprint": "0",
                "firingTriggerId": [
                    "20"
                ]
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "tagId": "23",
                "name": "Youtube Event",
                "type": "ua",
                "liveOnly": false,
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "useDebugVersion",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "true"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "{{Fake UA}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_EVENT"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "nonInteraction",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventLabel",
                        "value": "{{Youtube Label}}"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "anonymizeIp",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventCategory",
                        "value": "{{Event}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventAction",
                        "value": "{{Youtube Action}}"
                    }
                ],
                "fingerprint": "0",
                "firingTriggerId": [
                    "21"
                ]
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "tagId": "24",
                "name": "Youtube Video Script",
                "type": "html",
                "liveOnly": false,
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "true"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script type=\"text/javascript\">\n// OPTIONAL: Enable JSAPI if it's not already on the URL\n// note: this will cause the Youtube player to \"flash\" on the page when reloading to enable the JS API\nfor (var e = document.getElementsByTagName(\"iframe\"), x = e.length; x--;)\n  if (/youtube.com\\/embed/.test(e[x].src))\n     if(e[x].src.indexOf('enablejsapi=') === -1)\n        e[x].src += (e[x].src.indexOf('?') ===-1 ? '?':'&') + 'enablejsapi=1';\n\nvar gtmYTListeners = []; // support multiple players on the same page\n// attach our YT listener once the API is loaded\nfunction onYouTubeIframeAPIReady() {\n    for (var e = document.getElementsByTagName(\"iframe\"), x = e.length; x--;) {\n        if (/youtube.com\\/embed/.test(e[x].src)) {\n            gtmYTListeners.push(new YT.Player(e[x], {\n                events: {\n                    onStateChange: onPlayerStateChange,\n                    onError: onPlayerError\n                }\n            }));\n            YT.gtmLastAction = \"p\";\n        }\n    }\n}\n\n// listen for play/pause, other states such as rewind and end could also be added\n// also report % played every second\nfunction onPlayerStateChange(e) {\n    e[\"data\"] == YT.PlayerState.PLAYING && setTimeout(onPlayerPercent, 1000, e[\"target\"]);\n    var video_data = e.target[\"getVideoData\"](),\n        youTubeLabel = video_data.video_id+':'+video_data.title;\n    if (e[\"data\"] == YT.PlayerState.PLAYING && YT.gtmLastAction == \"p\") {\n        dataLayer.push({\n            event: \"youtube\",\n            youtubeaction: \"play\",\n            youtubelabel: youTubeLabel\n        });\n        YT.gtmLastAction = \"\";\n    }\n    if (e[\"data\"] == YT.PlayerState.PAUSED) {\n        dataLayer.push({\n            event: \"youtube\",\n            action: \"pause\",\n            youtubelabel: youTubeLabel\n        });\n        YT.gtmLastAction = \"p\";\n    }\n}\n\n// catch all to report errors through the GTM data layer\n// once the error is exposed to GTM, it can be tracked in UA as an event!\nfunction onPlayerError(e) {\n    dataLayer.push({\n        event: \"error\",\n        youtubeaction: \"GTM\",\n        youtubelabel: \"youtube:\" + e[\"target\"][\"src\"] + \"-\" + e[\"data\"]\n    })\n}\n\n// report the % played if it matches 0%, 25%, 50%, 75% or completed\nfunction onPlayerPercent(e) {\n    if (e[\"getPlayerState\"]() == YT.PlayerState.PLAYING) {\n        var t = e[\"getDuration\"]() - e[\"getCurrentTime\"]() <= 1.5 ? 1 : (Math.floor(e[\"getCurrentTime\"]() / e[\"getDuration\"]() * 4) / 4).toFixed(2);         if (!e[\"lastP\"] || t > e[\"lastP\"]) {\n            var video_data = e[\"getVideoData\"]();\n                label: youTubeLabel = video_data.video_id+':'+video_data.title;\n            e[\"lastP\"] = t;\n            dataLayer.push({\n                event: \"youtube\",\n                youtubeaction: t * 100 + \"%\",\n                youtubelabel: youTubeLabel \n            })\n        }\n        e[\"lastP\"] != 1 && setTimeout(onPlayerPercent, 1000, e);\n    }\n}\n\n// load the Youtube JS api and get going\nvar j = document.createElement(\"script\"),\n    f = document.getElementsByTagName(\"script\")[0];\nj.src = \"//www.youtube.com/iframe_api\";\nj.async = true;\nf.parentNode.insertBefore(j, f);\n</script>"
                    }
                ],
                "fingerprint": "0",
                "firingTriggerId": [
                    "22"
                ]
            }
        ],
        "fingerprint": "0",
        "trigger": [
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "triggerId": "17",
                "name": "HTML5 Video Action",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "gaEvent"
                            }
                        ]
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "triggerId": "18",
                "name": "HTML5 Video Loaded",
                "type": "DOM_READY",
                "filter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{is HTML5 Video Present}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "true"
                            }
                        ]
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "triggerId": "19",
                "name": "Vimeo Action",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "Vimeo"
                            }
                        ]
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "triggerId": "20",
                "name": "Vimeo Video Loaded",
                "type": "DOM_READY",
                "filter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{Is Vimeo Video Present}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "true"
                            }
                        ]
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "triggerId": "21",
                "name": "Youtube Event",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "youtube"
                            }
                        ]
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "triggerId": "22",
                "name": "Youtube Video Loaded",
                "type": "DOM_READY",
                "filter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{Is Youtube Present}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "true"
                            }
                        ]
                    }
                ],
                "fingerprint": "0"
            }
        ],
        "variable": [
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "37",
                "name": "Fake UA",
                "type": "c",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "value",
                        "value": "X"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "32",
                "name": "HTML5 Video Action",
                "type": "v",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "gaEventAction"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "33",
                "name": "HTML5 Video Category",
                "type": "v",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "gaEventCategory"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "34",
                "name": "HTML5 Video Label",
                "type": "v",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "gaEventLabel"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "23",
                "name": "Is Vimeo Video Present",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function () {\n    for (var e = document.getElementsByTagName('iframe'), x = e.length; x--;)\n        if (/player.vimeo.com\\/embed/.test(e[x].src)) return true;\n    return false;\n}"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "24",
                "name": "Is Youtube Present",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function () {\n    for (var e = document.getElementsByTagName('iframe'), x = e.length; x--;)\n        if (/youtube.com\\/embed/.test(e[x].src)) return true;\n    return false;\n}"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "38",
                "name": "Vimeo Action",
                "type": "v",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "eventAction"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "39",
                "name": "Vimeo Category",
                "type": "v",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "eventCategory"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "40",
                "name": "Vimeo Label",
                "type": "v",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "eventLabel"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "41",
                "name": "Youtube Action",
                "type": "v",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "youtubeaction"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "42",
                "name": "Youtube Label",
                "type": "v",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "youtubelabel"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    }
                ],
                "fingerprint": "0"
            },
            {
                "accountId": "30449707",
                "containerId": "1002234",
                "variableId": "22",
                "name": "is HTML5 Video Present",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function () {\n    var video = document.getElementsByTagName(\"video\").length;\n    if (video > 0) {\n        return \"true\";\n    }\n}"
                    }
                ],
                "fingerprint": "0"
            }
        ]
    }
}